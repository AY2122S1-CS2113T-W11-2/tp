@startuml
box Main
Participant ":Duke" as Duke
end box
box Ui
Participant ":Ui" as Ui
end box
box Logic
Participant ":Parser" as Parser
Participant ":ValidityChecker" as Valid
Participant "cmd:AddCommand" as DeleteCommand
end box

box Model
Participant ":NormalFinanceManager" as NormalFinanceManager
Participant "e:Entry" as Entry
Participant ":BudgetManager" as Budget
end box

box Storage
Participant ":NormalListDataManager" as NormalListDataManager
end box

activate Duke
Duke -> Parser : parseCommand("add n/movie a/12")
activate Parser

Parser -> Parser : prepareAddEntry("add n/movie a/12")
activate Parser
Parser -> Parser : parseInputByTags("add n/movie a/12")
activate Parser
Parser -> Valid : checkExistenceAndValidityOfTags(parser, "add n/movie a/12")
activate Valid
Valid --> Parser : validTags
deactivate Valid

Parser --> Parser
deactivate Parser
Parser -> Parser : createExpenseObject()

activate Parser
create Entry

Parser -> Entry : create
activate Entry
Entry --> Parser : e
deactivate Entry
Parser --> Parser : e
deactivate Parser

create DeleteCommand
Parser -> DeleteCommand : AddCommand(e)
activate DeleteCommand
DeleteCommand --> Parser : cmd
deactivate DeleteCommand
Parser --> Parser : cmd
deactivate Parser
Parser --> Duke : cmd

deactivate Parser

Duke -> DeleteCommand : execute(...)

activate DeleteCommand
DeleteCommand -> NormalFinanceManager : addEntry(e)
activate NormalFinanceManager
NormalFinanceManager --> DeleteCommand
deactivate NormalFinanceManager

DeleteCommand -> NormalListDataManager : appendToEntryListTextFile(e)
activate NormalListDataManager
NormalListDataManager --> DeleteCommand
deactivate NormalListDataManager


DeleteCommand -> Ui : printEntryAdded(e)

activate Ui
Ui --> DeleteCommand
deactivate Ui
DeleteCommand -> Budget : checkExceedBudget(e, ...)
activate Budget
Budget --> DeleteCommand
deactivate Budget

DeleteCommand --> Duke
deactivate DeleteCommand
destroy DeleteCommand
@enduml